<h2><%= page_title %></h2>

<%= search_form_for @q, :url => connections_path, :remote => true, :html => {:method => :get, class: "form-inline", :id => "search", role: "form"} do |f| %>
  <div class="panel panel-default">
    <div class="panel-heading">
      <div class="input-group col-md-10">
	    <%= f.input_field :distance_lteq, :placeholder => "Distance max...", :class => 'form-control' %>
	    <%= f.input_field :duration_lteq, :placeholder => "Durée max...", :class => 'form-control' %>
	    <%= f.input_field :prm_duration_lteq, :placeholder => "Durée PMR max...", :class => 'form-control' %>
	    <!-- %= f.select :modification_state_eq, Connection::MODIFICATION_STATES, :class => 'form-control' % -->
        <%= f.input_field :active_eq, :title => "Actif ou non", :as => :select, :collection => [["Actif", true], ["Inactif", false]], :include_blank => true %>
      </div>
      <div class="input-group col-md-10">
        <%= f.input :mis_id_search1, :hint_text => "Entrez un SIM...", :no_result_text => "Pas de résultat",:searching_text => 'Recherche en cours...', :input_html => { :"data-pre" => ( @mis ? [ { id: @mis.id, name: @mis.name} ] : [] ).to_json } %>
        <%= f.input :stop_id_search1, :hint_text => "Entrez un Stop...", :no_result_text => "Pas de résultat",:searching_text => 'Recherche en cours...', :input_html => { :"data-pre" => ( @stop ? [ { id: @stop.id, name: @stop.name} ] : [] ).to_json } %>
        <%= f.input :mis_id_search2, :hint_text => "Entrez un SIM...", :no_result_text => "Pas de résultat",:searching_text => 'Recherche en cours...', :input_html => { :"data-pre" => ( [] ).to_json } %>
        <%= f.input :stop_id_search2, :hint_text => "Entrez un Stop...", :no_result_text => "Pas de résultat",:searching_text => 'Recherche en cours...', :input_html => { :"data-pre" => ( [] ).to_json } %>

      </div>
	</div>
	<div class="input-group-btn">
          <button class="btn btn-default" type="submit"><i class="fa fa-search"></i></button>
	</div>
      </div>
    </div>
  </div>
<% end %>

<div id="connections"><%= render 'connections' %></div >

<script>
  $(document).ready( function() {
      var unselectSim = function( item, index) {
        console.log("call unselectSim index="+index);

        $('#q_stop_id_search'+index).tokenInput( "clear" );
      }

      var selectSim1 = function ( item ) { selectSim( item, 1); };
      var unselectSim1 = function ( item ) { unselectSim( item, 1); };
      var selectSim2 = function ( item ) { selectSim( item, 2); };
      var unselectSim2 = function ( item ) { unselectSim( item, 2); };

      var simRequest = '<%= miss_index_path( format: :json ) %>';
      var stopRequest = function( selector ) {
        var url = '<%= stops_path( format: :json ) %>';
        if ( $( selector).tokenInput( "get")[0]==undefined) {
          return url;
        }
        var misId = $( selector).tokenInput( "get")[0].id;
        return url+'?q[mis_id_eq]='+misId;
      }
      var stopRequest1 = function() { return stopRequest('#q_mis_id_search1'); };
      var stopRequest2 = function() { return stopRequest('#q_mis_id_search2'); };

      $([ { selector: '#q_mis_id_search1', onDelete: unselectSim1, request: simRequest},
          { selector: '#q_mis_id_search2', onDelete: unselectSim2, request: simRequest},
          { selector: '#q_stop_id_search1', request: stopRequest1},
          { selector: '#q_stop_id_search2', request: stopRequest2},
          ]).each( function(){

          $( this.selector ).tokenInput( this.request,
              { queryParam: 'q[name_cont]',
                tokenLimit: 1,
                onDelete: this.onDelete,
              } );
      });

  });
</script>

